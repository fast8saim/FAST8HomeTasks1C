// MIT License
//
// Copyright (c) 2023 FAST8.RU
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#Область ПрограммныйИнтерфейс

Функция ПроверитьПользователяУстройства() Экспорт

	ПользовательУстройства = Константы.fast8ПользовательУстройства.Получить();
	Если ЗначениеЗаполнено(ПользовательУстройства) Тогда
		ПользовательУстановлен = Истина;
		ОбновитьПользователяУстройства();
	Иначе
		ПользовательУстановлен = Ложь;
	КонецЕсли;
	
	Возврат ПользовательУстановлен;

КонецФункции // ПроверитьПользователяУстройства()

Процедура ОбновитьПользователяУстройства() Экспорт

	ПользовательУстройства	= Константы.fast8ПользовательУстройства.Получить();
		
	ПользовательИзменен = Ложь;
	ПользователиИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
	Если ПользователиИБ.Количество() Тогда
		ПользовательИБ = ПользователиИБ.Получить(0);
	Иначе
		ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
		ПользовательИзменен = Истина;
	КонецЕсли;
	
	Если ПользовательИБ.Имя <> ПользовательУстройства Тогда
		ПользовательИБ.Имя = ПользовательУстройства;
		ПользовательИзменен = Истина;
	КонецЕсли;
	
	Роли				= ПользовательИБ.Роли;
	РольИсполнитель		= Метаданные.Роли.fast8Исполнитель;
	РольБазовые			= Метаданные.Роли.fast8БазовыеОбъекты;
		
	Если Не Роли.Содержит(РольИсполнитель) Тогда
		Роли.Добавить(РольИсполнитель);
		ПользовательИзменен = Истина;
	КонецЕсли;
	Если Не Роли.Содержит(РольБазовые) Тогда
		Роли.Добавить(РольБазовые);
		ПользовательИзменен = Истина;		
	КонецЕсли;
	  		
	Если ПользовательИзменен Тогда
		ПользовательИБ.Записать();
	КонецЕсли;
	
КонецПроцедуры // ОбновитьПользователяУстройства()

Функция ПроверитьПользователей() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Сервер = ПользователиИнформационнойБазы.НайтиПоИмени("Сервер");
	СерверИзменен = Ложь;
	Если Сервер = Неопределено Тогда
		Сервер = ПользователиИнформационнойБазы.СоздатьПользователя();
		Сервер.Имя = "Сервер";
		СерверИзменен = Истина;
	КонецЕсли;
	Если Не Сервер.Роли.Содержит(Метаданные.Роли.fast8Администрирование) Тогда 
		Сервер.Роли.Добавить(Метаданные.Роли.fast8Администрирование);
		СерверИзменен = Истина;
	КонецЕсли;
	Если Не Сервер.Роли.Содержит(Метаданные.Роли.fast8БазовыеОбъекты) Тогда
		Сервер.Роли.Добавить(Метаданные.Роли.fast8БазовыеОбъекты);
		СерверИзменен = Истина;
	КонецЕсли;
	Если СерверИзменен Тогда
		Сервер.Записать();
		
		УзелСервер = ПланыОбмена.fast8Полный.ЭтотУзел().ПолучитьОбъект();
		Если Не ЗначениеЗаполнено(УзелСервер.Наименование) Тогда
			УзелСервер.Наименование = "Сервер";
		КонецЕсли;
		Если Не ЗначениеЗаполнено(УзелСервер.Код) Тогда
			УзелСервер.Код = "01";
		КонецЕсли;
		УзелСервер.Записать();
		
		#Если Сервер И Не МобильноеПриложениеСервер Тогда
		Задание = РегламентныеЗадания.НайтиПредопределенное("fast8СозданиеЗаданийПоРасписанию");
		Задание.ИмяПользователя = "Сервер";
		Задание.Записать();
		#КонецЕсли
	КонецЕсли;
	
	ТаблицаПользователей = Новый ТаблицаЗначений();
	ТаблицаПользователей.Колонки.Добавить("Наименование",	Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(150)));
	ТаблицаПользователей.Колонки.Добавить("Исполнитель",	Новый ОписаниеТипов("Булево"));
		
	ПользователиИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
	Для Каждого ПользовательИБ Из ПользователиИБ Цикл
		Если ПользовательИБ.Имя = "Сервер" Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаПользователь = ТаблицаПользователей.Добавить();
		СтрокаПользователь.Наименование	= ПользовательИБ.Имя;
		СтрокаПользователь.Исполнитель	= ПользовательИБ.Роли.Содержит(Метаданные.Роли.fast8Исполнитель);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПользователей.Наименование КАК Наименование,
	|	ТаблицаПользователей.Исполнитель КАК Исполнитель
	|ПОМЕСТИТЬ ВТ_ПользователиИБ
	|ИЗ
	|	&ТаблицаПользователей КАК ТаблицаПользователей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	fast8Пользователи.Наименование КАК Наименование,
	|	fast8Пользователи.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ПользователиСправочник
	|ИЗ
	|	Справочник.fast8Пользователи КАК fast8Пользователи
	|ГДЕ
	|	fast8Пользователи.Ссылка <> ЗНАЧЕНИЕ(Справочник.fast8Пользователи.Сервер)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_ПользователиСправочник.Наименование, ВТ_ПользователиИБ.Наименование) КАК Наименование,
	|	ВЫБОР
	|		КОГДА ВТ_ПользователиСправочник.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПользовательЕстьВСправочнике,
	|	ВЫБОР
	|		КОГДА ВТ_ПользователиИБ.Наименование ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПользовательЕстьВБазе,
	|	ВТ_ПользователиСправочник.Ссылка КАК Ссылка
	|ИЗ
	|	ВТ_ПользователиСправочник КАК ВТ_ПользователиСправочник
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ПользователиИБ КАК ВТ_ПользователиИБ
	|		ПО ВТ_ПользователиСправочник.Наименование = ВТ_ПользователиИБ.Наименование";
	Запрос.УстановитьПараметр("ТаблицаПользователей", ТаблицаПользователей);
	
	ЕстьПользователи = Ложь;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЕстьПользователи = Истина;
		ЕстьИзменения = Ложь;
		Если Выборка.ПользовательЕстьВСправочнике Тогда
			ПользовательОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Иначе
			ЕстьИзменения = Истина;
			ПользовательОбъект = Справочники.fast8Пользователи.СоздатьЭлемент();
			ПользовательОбъект.Наименование	= Выборка.Наименование;
		КонецЕсли;
		Если ЕстьИзменения Тогда
			ПользовательОбъект.Записать();
		КонецЕсли;				
		
		ЕстьИзменения = Ложь;
		Если Выборка.ПользовательЕстьВБазе Тогда
			ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(Выборка.Наименование);
		Иначе
			ЕстьИзменения = Истина;
			ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
			ПользовательИБ.Имя = Выборка.Наименование;
		КонецЕсли;
		
		Если Не ПользовательИБ.Роли.Содержит(Метаданные.Роли.fast8Исполнитель) Тогда
			ЕстьИзменения = Истина;
			ПользовательИБ.Роли.Добавить(Метаданные.Роли.fast8Исполнитель);
		КонецЕсли;
		Если Не ПользовательИБ.Роли.Содержит(Метаданные.Роли.fast8БазовыеОбъекты) Тогда
			ЕстьИзменения = Истина;
			ПользовательИБ.Роли.Добавить(Метаданные.Роли.fast8БазовыеОбъекты);
		КонецЕсли;
		Если ЕстьИзменения Тогда
			ПользовательИБ.Записать();			
		КонецЕсли;
	КонецЦикла;	
	
	Возврат ЕстьПользователи;
	
КонецФункции // ПроверитьПользователей()

Процедура ОбработатьСлужебногоПользователя() Экспорт
	
	// Служебный пользователь приедет с сервера
	#Если МобильноеПриложениеСервер Тогда
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(1) КАК КоличествоПользователей
	|ИЗ
	|	Справочник.fast8Пользователи КАК fast8Пользователи";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.КоличествоПользователей = 1 Тогда
			ПользовательУдалить = Справочники.fast8Пользователи.Сервер.ПолучитьОбъект();
			ПользовательУдалить.ИмяПредопределенныхДанных = "";
			ПользовательУдалить.ОбменДанными.Загрузка = Истина;
			ПользовательУдалить.Записать();
			ПользовательУдалить.Удалить();
		КонецЕсли;
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры // ОбработатьСлужебногоПользователя()

#КонецОбласти // ПрограммныйИнтерфейс
