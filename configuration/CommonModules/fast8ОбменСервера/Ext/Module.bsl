// MIT License
//
// Copyright (c) 2023 FAST8.RU
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#Область ПрограммныйИнтерфейс

#Если Сервер И Не МобильноеПриложениеСервер Тогда

Функция ПолучитьВерсиюПриложения() Экспорт
	
	Возврат Метаданные.Версия;
	
КонецФункции // ПолучитьВерсиюПриложения()

Функция ПолучитьВремяСервера() Экспорт
	
	Возврат ТекущаяДатаСеанса();
	
КонецФункции // ПолучитьВремяСервера()
	
Функция ПолучитьГлавныйУзелОбмена() Экспорт
			
	Возврат fast8ОбщегоНазначения.СериализоватьСсылку(ПланыОбмена.fast8Полный.ЭтотУзел(), Истина);
	
КонецФункции // ПолучитьГлавныйУзелОбмена()

Функция ЗарегистрироватьВсеИзменения(ИмяУстройства) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	УзелОбмена = ПланыОбмена.fast8Полный.НайтиПоНаименованию(ИмяУстройства);
	ПланыОбмена.ЗарегистрироватьИзменения(УзелОбмена);
		
	Возврат Истина;
	
КонецФункции // ЗарегистрироватьВсеИзменения()

Функция ПолучитьПрефикс(ИмяУстройства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	fast8Полный.Код
	|ИЗ
	|	ПланОбмена.fast8Полный КАК fast8Полный
	|ГДЕ
	|	fast8Полный.Наименование = &ИмяУстройства";
	Запрос.УстановитьПараметр("ИмяУстройства", ИмяУстройства);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Код;
	
КонецФункции // ПолучитьПрефикс()

Функция ПолучитьОбъектБазы(ИмяУстройства, ИмяТаблицы) Экспорт

	Ответ = "";

	ЭтоРегистр = Ложь;
	Если СтрНачинаетсяС(ИмяТаблицы, "Регистр") Тогда
		ЭтоРегистр = Истина;
	КонецЕсли;
    	
	Если ЭтоРегистр Тогда
		ИмяПоля = "Регистратор";
	Иначе
		ИмяПоля = "Ссылка";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрШаблон("ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1 ТаблицаИзменения.%1 ИЗ %2.Изменения КАК ТаблицаИзменения ВНУТРЕННЕЕ СОЕДИНЕНИЕ %2 КАК Таблица ПО ТаблицаИзменения.%1 = Таблица.%1 ГДЕ ТаблицаИзменения.Узел.Наименование = &ИмяУстройства", ИмяПоля, ИмяТаблицы);
	Запрос.УстановитьПараметр("ИмяУстройства", ИмяУстройства);
			
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если ЭтоРегистр Тогда
			НаборЗаписей = РегистрыСведений[СтрЗаменить(ИмяТаблицы, "РегистрСведений.", "")].СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			Попытка
				НаборЗаписей.Прочитать();
			Исключение
				ЗаписьЖурналаРегистрации("Ошибка чтения изменений", УровеньЖурналаРегистрации.Ошибка, НаборЗаписей.Метаданные(), Выборка.Регистратор);
				ВызватьИсключение СтрШаблон("Ошибка чтения изменений %1", Выборка.Регистратор);
			КонецПопытки;
			Ответ = fast8ОбщегоНазначения.СериализоватьСсылку(НаборЗаписей, Ложь);
		Иначе
			Ответ = fast8ОбщегоНазначения.СериализоватьСсылку(Выборка.Ссылка, Истина);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ответ;

КонецФункции // ПолучитьОбъектБазы()

Функция ПодтвердитьПолучениеОбъекта(ИмяУстройства, ДанныеСсылки, ТипДанных) Экспорт
	
	Узлы = Новый Массив;
	Узлы.Добавить(ПланыОбмена.fast8Полный.НайтиПоНаименованию(ИмяУстройства));
	
	ДанныеОбмена = fast8ОбщегоНазначения.ДесериализоватьДанные(ДанныеСсылки, ТипДанных);
	Если ДанныеОбмена <> Неопределено Тогда
		ПланыОбмена.УдалитьРегистрациюИзменений(Узлы, ДанныеОбмена);
	КонецЕсли;
		
	Возврат Истина;
		
КонецФункции // ПодтвердитьПолучениеОбъекта()

Функция ПроверитьНаличиеИзменений(ИмяУстройства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ТаблицаИзменения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.fast8Пользователи.Изменения КАК ТаблицаИзменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.fast8Пользователи КАК Таблица
	|		ПО ТаблицаИзменения.Ссылка = Таблица.Ссылка
	|ГДЕ
	|	ТаблицаИзменения.Узел.Наименование = &ИмяУстройства
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаИзменения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.fast8Процессы.Изменения КАК ТаблицаИзменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.fast8Процессы КАК Таблица
	|		ПО ТаблицаИзменения.Ссылка = Таблица.Ссылка
	|ГДЕ
	|	ТаблицаИзменения.Узел.Наименование = &ИмяУстройства
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаИзменения.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.fast8ВыполнениеЗадания.Изменения КАК ТаблицаИзменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.fast8ВыполнениеЗадания КАК Таблица
	|		ПО ТаблицаИзменения.Ссылка = Таблица.Ссылка
	|ГДЕ
	|	ТаблицаИзменения.Узел.Наименование = &ИмяУстройства
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаИзменения.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.fast8Задание.Изменения КАК ТаблицаИзменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.fast8Задание КАК Таблица
	|		ПО ТаблицаИзменения.Ссылка = Таблица.Ссылка
	|ГДЕ
	|	ТаблицаИзменения.Узел.Наименование = &ИмяУстройства
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаИзменения.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.fast8ПроверкаЗадания.Изменения КАК ТаблицаИзменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.fast8ПроверкаЗадания КАК Таблица
	|		ПО ТаблицаИзменения.Ссылка = Таблица.Ссылка
	|ГДЕ
	|	ТаблицаИзменения.Узел.Наименование = &ИмяУстройства
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаИзменения.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.fast8НазначениеИсполнителя.Изменения КАК ТаблицаИзменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.fast8НазначениеИсполнителя КАК Таблица
	|		ПО ТаблицаИзменения.Ссылка = Таблица.Ссылка
	|ГДЕ
	|	ТаблицаИзменения.Узел.Наименование = &ИмяУстройства
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаИзменения.Регистратор
	|ИЗ
	|	РегистрСведений.fast8ИсторияВыполненияЗаданий.Изменения КАК ТаблицаИзменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.fast8ИсторияВыполненияЗаданий КАК Таблица
	|		ПО ТаблицаИзменения.Регистратор = Таблица.Регистратор
	|ГДЕ
	|	ТаблицаИзменения.Узел.Наименование = &ИмяУстройства";
	Запрос.УстановитьПараметр("ИмяУстройства", ИмяУстройства);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции // ПроверитьНаличиеИзменений()

Функция ПолучитьКоличествоИзменений(ИмяУстройства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(Расчет.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		1 КАК Количество
	|	ИЗ
	|		Справочник.fast8Пользователи.Изменения КАК ТаблицаИзменения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.fast8Пользователи КАК Таблица
	|			ПО ТаблицаИзменения.Ссылка = Таблица.Ссылка
	|	ГДЕ
	|		ТаблицаИзменения.Узел.Наименование = &ИмяУстройства
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		1
	|	ИЗ
	|		Справочник.fast8Процессы.Изменения КАК ТаблицаИзменения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.fast8Процессы КАК Таблица
	|			ПО ТаблицаИзменения.Ссылка = Таблица.Ссылка
	|	ГДЕ
	|		ТаблицаИзменения.Узел.Наименование = &ИмяУстройства
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		1
	|	ИЗ
	|		Документ.fast8ВыполнениеЗадания.Изменения КАК ТаблицаИзменения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.fast8ВыполнениеЗадания КАК Таблица
	|			ПО ТаблицаИзменения.Ссылка = Таблица.Ссылка
	|	ГДЕ
	|		ТаблицаИзменения.Узел.Наименование = &ИмяУстройства
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		1
	|	ИЗ
	|		Документ.fast8Задание.Изменения КАК ТаблицаИзменения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.fast8Задание КАК Таблица
	|			ПО ТаблицаИзменения.Ссылка = Таблица.Ссылка
	|	ГДЕ
	|		ТаблицаИзменения.Узел.Наименование = &ИмяУстройства
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		1
	|	ИЗ
	|		Документ.fast8ПроверкаЗадания.Изменения КАК ТаблицаИзменения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.fast8ПроверкаЗадания КАК Таблица
	|			ПО ТаблицаИзменения.Ссылка = Таблица.Ссылка
	|	ГДЕ
	|		ТаблицаИзменения.Узел.Наименование = &ИмяУстройства
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		1
	|	ИЗ
	|		Документ.fast8НазначениеИсполнителя.Изменения КАК ТаблицаИзменения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.fast8НазначениеИсполнителя КАК Таблица
	|			ПО ТаблицаИзменения.Ссылка = Таблица.Ссылка
	|	ГДЕ
	|		ТаблицаИзменения.Узел.Наименование = &ИмяУстройства
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		1
	|	ИЗ
	|		РегистрСведений.fast8ИсторияВыполненияЗаданий.Изменения КАК ТаблицаИзменения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.fast8ИсторияВыполненияЗаданий КАК Таблица
	|			ПО ТаблицаИзменения.Регистратор = Таблица.Регистратор
	|	ГДЕ
	|		ТаблицаИзменения.Узел.Наименование = &ИмяУстройства) КАК Расчет";
	Запрос.УстановитьПараметр("ИмяУстройства", ИмяУстройства);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
		
	Возврат ?(ЗначениеЗаполнено(Выборка.Количество), Выборка.Количество, 0);
	
КонецФункции // ПолучитьКоличествоИзменений()

Функция ЗагрузитьОбъектБазы(ИмяУстройства, ДанныеОбъекта, ТипДанных) Экспорт
	
	Успех			= Истина;
	УзелОбмена		= ПланыОбмена.fast8Полный.НайтиПоНаименованию(ИмяУстройства);
	ДанныеОбмена	= fast8ОбщегоНазначения.ДесериализоватьДанные(ДанныеОбъекта, ТипДанных);
	Если ДанныеОбмена <> Неопределено Тогда
		ДанныеОбмена.ОбменДанными.Отправитель	= УзелОбмена;
		ДанныеОбмена.ОбменДанными.Загрузка		= Истина;
		Попытка		
			ДанныеОбмена.Записать();
		Исключение
			ЗаписьЖурналаРегистрации("ЗагрузкаСКлиента", УровеньЖурналаРегистрации.Ошибка,, ДанныеОбмена, ОписаниеОшибки());
			Успех = Ложь;
		КонецПопытки;
	КонецЕсли;
	
	Возврат Успех;
	
КонецФункции // ЗагрузитьОбъектБазы()

Функция ЗапуститьРасчетСписковПоСтатусу(ИмяУстройства, ДанныеОбъекта) Экспорт
	
	Успех			= Истина;
	ДанныеОбмена	= Документы.fast8Задание.ПолучитьСсылку(Новый УникальныйИдентификатор(ДанныеОбъекта));
	Документы.fast8Задание.СформироватьЗаписиСписковЗаданий(ДанныеОбмена);
	
	Возврат Успех;
	
КонецФункции // ЗапуститьРасчетСписковПоСтатусу()

#КонецЕсли

#КонецОбласти // ПрограммныйИнтерфейс