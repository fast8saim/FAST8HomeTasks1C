// MIT License
//
// Copyright (c) 2023 FAST8.RU
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#Область ПрограммныйИнтерфейс

Функция ПолучитьПодключение() Экспорт
	
	Таймаут = 5;
	
	АдресСервера			= Константы.fast8ПодключениеКСерверу.Получить();
	ИмяПользователя			= Константы.fast8ПользовательУстройства.Получить();
	Пароль					= Константы.fast8ПарольПодключения.Получить();
	Прокси					= Новый ИнтернетПрокси();
	Определение				= Новый WSОпределения(АдресСервера + "/ws/exchange.1cws?wsdl", ИмяПользователя, Пароль, Прокси, Таймаут,,);
	ВебСервис				= Новый WSПрокси(Определение, "fast8.ru", "fast8Обмен", "fast8ОбменSoap", Прокси, Таймаут,,,);
	ВебСервис.Пользователь	= ИмяПользователя;
	ВебСервис.Пароль		= Пароль;
		
	Возврат ВебСервис;
	
КонецФункции // ПолучитьПодключение()

Функция ПроверитьСвязь(ВебСервис = Неопределено) Экспорт
	
	СвязьУстановлена	= Ложь;	
	Если ВебСервис = Неопределено Тогда
		ВебСервис		= ПолучитьПодключение();
	КонецЕсли;
	Ответ				= ВебСервис.ПроверитьСоединение();
	Если Ответ = "fast8.ru" Тогда
		СвязьУстановлена = Истина;
	КонецЕсли;
		
	Возврат СвязьУстановлена;
	
КонецФункции // ПроверитьСвязь()

Функция ПолучитьВремяСервера(ВебСервис = Неопределено) Экспорт
	
	Если ВебСервис = Неопределено Тогда
		ВебСервис		= ПолучитьПодключение();
	КонецЕсли;
	Возврат	ВебСервис.ПолучитьВремяСервера();
	
КонецФункции // ПолучитьВремяСервера()

Функция ПолучитьПрефикс(ВебСервис = Неопределено) Экспорт
	
	Если ВебСервис = Неопределено Тогда
		ВебСервис		= ПолучитьПодключение();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Префикс = ВебСервис.ПолучитьПрефикс(ВебСервис.Пользователь);
	
	ЭтотУзел = ПланыОбмена.fast8Полный.ЭтотУзел().ПолучитьОбъект();
	ЭтотУзел.Код = Префикс;
	ЭтотУзел.Записать();
	
	Возврат Префикс;	
	
КонецФункции // ПолучитьПрефикс()

Функция ПроверитьНаличиеНовыхДанных(ВебСервис = Неопределено) Экспорт
	
	Если ВебСервис = Неопределено Тогда
		ВебСервис		= ПолучитьПодключение();
	КонецЕсли;
	Возврат ВебСервис.ПроверитьНаличиеИзменений(ВебСервис.Пользователь);
	
КонецФункции // ПроверитьНаличиеНовыхДанных()

Функция ПолучитьКоличествоНовыхДанных(ВебСервис = Неопределено) Экспорт
	
	Если ВебСервис = Неопределено Тогда
		ВебСервис		= ПолучитьПодключение();
	КонецЕсли;
	Возврат ВебСервис.ПроверитьКоличествоИзменений(ВебСервис.Пользователь);
	
КонецФункции // ПолучитьКоличествоНовыхДанных()

Функция ЗапуститьПолучениеНовыхДанных() Экспорт
	
	ПолучитьНовыеДанные();
	fast8УправлениеПроцессами.ЗаполнитьСпискиПоСтатусам(Истина);
	
	Возврат Истина;
		
КонецФункции // ЗапуститьПолучениеНовыхДанных()

Функция ПолучитьНовыеДанные(ВебСервис = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ВебСервис = Неопределено Тогда
		ВебСервис	= ПолучитьПодключение();
	КонецЕсли;
	УзелОтправки	= УзелОтправки();
	
	КоличествоЗагруженных = 0;
	Константы.fast8КоличествоЗагруженных.Установить(КоличествоЗагруженных);
	ЗагруженныеСсылки = Новый Массив;
	
	ТаблицыБазы = Новый Массив();
	ТаблицыБазы.Добавить(Новый Структура("ГруппаМетаданных, ИмяТаблицы", "Справочник",	"fast8Пользователи")); 
	ТаблицыБазы.Добавить(Новый Структура("ГруппаМетаданных, ИмяТаблицы", "Справочник",	"fast8Процессы"));
	ТаблицыБазы.Добавить(Новый Структура("ГруппаМетаданных, ИмяТаблицы", "Документ",	"fast8Задание"));
	ТаблицыБазы.Добавить(Новый Структура("ГруппаМетаданных, ИмяТаблицы", "Документ",	"fast8НазначениеИсполнителя"));
	ТаблицыБазы.Добавить(Новый Структура("ГруппаМетаданных, ИмяТаблицы", "Документ",	"fast8ВыполнениеЗадания"));
	ТаблицыБазы.Добавить(Новый Структура("ГруппаМетаданных, ИмяТаблицы", "Документ",	"fast8ПроверкаЗадания"));
	
	Для Каждого ТаблицаБазы Из ТаблицыБазы Цикл
		ИмяВЗапросе			= ТаблицаБазы.ГруппаМетаданных + "." + ТаблицаБазы.ИмяТаблицы;
		ОписаниеТипаОбъекта	= ТаблицаБазы.ГруппаМетаданных + "Объект." + ТаблицаБазы.ИмяТаблицы;
		ОписаниеТипаСсылки	= ТаблицаБазы.ГруппаМетаданных + "Ссылка." + ТаблицаБазы.ИмяТаблицы;
		Для Н = 1 По 1000 Цикл
			ИсходныеДанные = ВебСервис.ПолучитьОбъектБазы(ВебСервис.Пользователь, ИмяВЗапросе);
			Если Не ЗначениеЗаполнено(ИсходныеДанные) Тогда
				Прервать;
			КонецЕсли;
			КоличествоЗагруженных = КоличествоЗагруженных + 1;
			Константы.fast8КоличествоЗагруженных.Установить(КоличествоЗагруженных);
			ОбъектБазы = fast8ОбщегоНазначения.ДесериализоватьДанные(ИсходныеДанные, ОписаниеТипаОбъекта);
			Если ТипЗнч(ОбъектБазы) = Тип(ОписаниеТипаОбъекта) Тогда
				ОбъектБазы.ОбменДанными.Загрузка	= Истина;
				ОбъектБазы.ОбменДанными.Отправитель	= УзелОтправки;
				ОбъектБазы.Записать();
				
				ЗагруженныеСсылки.Добавить(ОбъектБазы.Ссылка);

				ДанныеСсылки = fast8ОбщегоНазначения.СериализоватьСсылку(ОбъектБазы.Ссылка, Ложь);
				ВебСервис.ПодтвердитьПолучениеОбъекта(ВебСервис.Пользователь, ДанныеСсылки, ОписаниеТипаСсылки);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ТаблицыБазы = Новый Массив();
	ТаблицыБазы.Добавить(Новый Структура("ГруппаМетаданных, ИмяТаблицы", "РегистрСведений",	"fast8ИсторияВыполненияЗаданий"));
	
	Для Каждого ТаблицаБазы Из ТаблицыБазы Цикл
		ИмяВЗапросе			= ТаблицаБазы.ГруппаМетаданных + "." + ТаблицаБазы.ИмяТаблицы;
		ОписаниеТипаОбъекта	= ТаблицаБазы.ГруппаМетаданных + "НаборЗаписей." + ТаблицаБазы.ИмяТаблицы;
		ОписаниеТипаСсылки	= ТаблицаБазы.ГруппаМетаданных + "НаборЗаписей." + ТаблицаБазы.ИмяТаблицы;
		
		Для Н = 1 По 10000 Цикл
			ИсходныеДанные = ВебСервис.ПолучитьОбъектБазы(ВебСервис.Пользователь, ИмяВЗапросе);
			Если Не ЗначениеЗаполнено(ИсходныеДанные) Тогда
				Прервать;
			КонецЕсли;
			КоличествоЗагруженных = КоличествоЗагруженных + 1;
			Константы.fast8КоличествоЗагруженных.Установить(КоличествоЗагруженных);
			ОбъектБазы = fast8ОбщегоНазначения.ДесериализоватьДанные(ИсходныеДанные, ОписаниеТипаОбъекта);
			Если ТипЗнч(ОбъектБазы) = Тип(ОписаниеТипаОбъекта) Тогда
				ОбъектБазы.ОбменДанными.Загрузка	= Истина;
				ОбъектБазы.ОбменДанными.Отправитель	= УзелОтправки;
				ОбъектБазы.Записать();
				
				ДанныеСсылки = fast8ОбщегоНазначения.СериализоватьСсылку(ОбъектБазы, Ложь);
				ВебСервис.ПодтвердитьПолучениеОбъекта(ВебСервис.Пользователь, ДанныеСсылки, ОписаниеТипаСсылки);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	fast8ВыполнениеЗадания.Задание КАК Задание
	|ИЗ
	|	Документ.fast8ВыполнениеЗадания КАК fast8ВыполнениеЗадания
	|ГДЕ
	|	fast8ВыполнениеЗадания.Ссылка В(&Ссылки)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	fast8Задание.Ссылка
	|ИЗ
	|	Документ.fast8Задание КАК fast8Задание
	|ГДЕ
	|	fast8Задание.Ссылка В(&Ссылки)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	fast8НазначениеИсполнителя.Задание
	|ИЗ
	|	Документ.fast8НазначениеИсполнителя КАК fast8НазначениеИсполнителя
	|ГДЕ
	|	fast8НазначениеИсполнителя.Ссылка В(&Ссылки)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	fast8ПроверкаЗадания.Задание
	|ИЗ
	|	Документ.fast8ПроверкаЗадания КАК fast8ПроверкаЗадания
	|ГДЕ
	|	fast8ПроверкаЗадания.Ссылка В(&Ссылки)";
	Запрос.УстановитьПараметр("Ссылки", ЗагруженныеСсылки);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Документы.fast8Задание.СформироватьЗаписиСписковЗаданий(Выборка.Задание);
	КонецЦикла;
			
	Возврат Истина;
	
КонецФункции // ПолучитьНовыеДанные()

Процедура ОтправитьДанные(ВебСервис = Неопределено) Экспорт

	Если ВебСервис = Неопределено Тогда
		ВебСервис	= ПолучитьПодключение();
	КонецЕсли;
	УзелОбмена		= УзелОтправки();
    	
    Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	fast8ВыполнениеЗаданияИзменения.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ВОбъект,
	|	""ДокументОбъект.fast8ВыполнениеЗадания"" КАК ИмяТипаОбъекта,
	|	fast8ВыполнениеЗаданияИзменения.Ссылка.Задание КАК Задание
	|ИЗ
	|	Документ.fast8ВыполнениеЗадания.Изменения КАК fast8ВыполнениеЗаданияИзменения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	fast8ЗаданиеИзменения.Ссылка,
	|	ИСТИНА,
	|	""ДокументОбъект.fast8Задание"",
	|	fast8ЗаданиеИзменения.Ссылка
	|ИЗ
	|	Документ.fast8Задание.Изменения КАК fast8ЗаданиеИзменения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	fast8ПроверкаЗаданияИзменения.Ссылка,
	|	ИСТИНА,
	|	""ДокументОбъект.fast8ПроверкаЗадания"",
	|	fast8ПроверкаЗаданияИзменения.Ссылка.Задание
	|ИЗ
	|	Документ.fast8ПроверкаЗадания.Изменения КАК fast8ПроверкаЗаданияИзменения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	fast8НазначениеИсполнителяИзменения.Ссылка,
	|	ИСТИНА,
	|	""ДокументОбъект.fast8НазначениеИсполнителя"",
	|	fast8НазначениеИсполнителяИзменения.Ссылка.Задание
	|ИЗ
	|	Документ.fast8НазначениеИсполнителя.Изменения КАК fast8НазначениеИсполнителяИзменения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	fast8ИсторияВыполненияЗаданийИзменения.Регистратор,
	|	ЛОЖЬ,
	|	""РегистрСведенийНаборЗаписей.fast8ИсторияВыполненияЗаданий"",
	|	fast8ИсторияВыполненияЗаданий.Задание
	|ИЗ
	|	РегистрСведений.fast8ИсторияВыполненияЗаданий.Изменения КАК fast8ИсторияВыполненияЗаданийИзменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.fast8ИсторияВыполненияЗаданий КАК fast8ИсторияВыполненияЗаданий
	|		ПО fast8ИсторияВыполненияЗаданийИзменения.Регистратор = fast8ИсторияВыполненияЗаданий.Регистратор";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗаданияДляРасчета = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Если ЗаданияДляРасчета.Получить(Выборка.Задание) = Неопределено Тогда
			ЗаданияДляРасчета.Вставить(Выборка.Задание, Выборка.Задание);
		КонецЕсли;
		Если Выборка.ВОбъект Тогда
			ДанныеОбъекта = fast8ОбщегоНазначения.СериализоватьСсылку(Выборка.Ссылка, Выборка.ВОбъект);
		Иначе
			НаборЗаписей = РегистрыСведений[СтрЗаменить(Выборка.ИмяТипаОбъекта, "РегистрСведенийНаборЗаписей.", "")].СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Ссылка);
			НаборЗаписей.Прочитать();
			ДанныеОбъекта = fast8ОбщегоНазначения.СериализоватьСсылку(НаборЗаписей, Выборка.ВОбъект);
		КонецЕсли;
		Если ВебСервис.ЗагрузитьОбъектБазы(ВебСервис.Пользователь, ДанныеОбъекта, Выборка.ИмяТипаОбъекта) = Истина Тогда
			ПланыОбмена.УдалитьРегистрациюИзменений(УзелОбмена, ?(Выборка.ВОбъект, Выборка.Ссылка, НаборЗаписей));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Задание Из ЗаданияДляРасчета Цикл
		ВебСервис.ЗапуститьРасчетСписковПоСтатусу(ВебСервис.Пользователь, Строка(Задание.Значение.УникальныйИдентификатор()));
	КонецЦикла;
	
КонецПроцедуры // ОтправитьДанные()

Процедура ЗарегистрироватьВсе(ВебСервис = Неопределено) Экспорт
	
	Если ВебСервис = Неопределено Тогда
		ВебСервис	= ПолучитьПодключение();
	КонецЕсли;
	ВебСервис.ЗарегистрироватьВсеИзменения(ВебСервис.Пользователь);
	
КонецПроцедуры // ЗарегистрироватьВсе()

Процедура ПолучитьГлавныйУзелОбмена(ВебСервис = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	Если ВебСервис = Неопределено Тогда
		ВебСервис	= ПолучитьПодключение();
	КонецЕсли;
	ОбъектДанных	= ВебСервис.ПолучитьГлавныйУзелОбмена();
	ЧтениеJSON		= Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ОбъектДанных);
	ОбъектБазы		= СериализаторXDTO.ПрочитатьJSON(ЧтениеJSON, Тип("ПланОбменаОбъект.fast8Полный"));
	Если ТипЗнч(ОбъектБазы) = Тип("ПланОбменаОбъект.fast8Полный") Тогда
		ОбъектБазы.ОбменДанными.Загрузка	= Истина;
		ОбъектБазы.ЭтотУзел					= Ложь;
		ОбъектБазы.Записать();
	КонецЕсли;
	
КонецПроцедуры // ПолучитьГлавныйУзелОбмена()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция УзелОтправки()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	fast8Полный.Ссылка КАК Ссылка
	|ИЗ
	|	ПланОбмена.fast8Полный КАК fast8Полный
	|ГДЕ
	|	НЕ fast8Полный.ЭтотУзел";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Ссылка;
	
КонецФункции // УзелОтправки()

#КонецОбласти // СлужебныеПроцедурыИФункции
